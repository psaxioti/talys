c
c                          TALYS.CMB
c
c +---------------------------------------------------------------------
c | Author: Arjan Koning, Stephane Hilaire and Marieke Duijvestijn
c | Date  : December 5, 2004
c | Task  : File with common blocks and declarations for TALYS
c +---------------------------------------------------------------------
c
c ********** Every local and global variable must be declared **********
c
      implicit none
c
c ********** All parameters for the array dimensions are set ***********
c
c Consult the various subroutines for an explanation of the variables.
c To enable optimal calculations on computers of different size, we
c introduce the variable memorypar. 
c
      integer   memorypar,numpar,numelem,numl,numlines,numenin,numZ,
     +          numN,numbar,numgam,numlev,numfile,numlev2,numrotcc,
     +          numomp,numrot,numen,numang,numangcont,numexc,numJph,
     +          numparx,numfact,numbins,numex,numJ,numenrec,numangrec,
     +          numendisc,numen2,numenmsd,numJmsd,nummsd,numZph,numNph,
     +          numbinfis,numhill,numtrans,nummold,numgoe,numcomp,
     +          numchannel,numin,numip,numid,numit,numih,numia,
     +          numchantot,nummass,numA,numenlow,numen6
c
c Use memorypar=2 for a 64 Mb machine
c Use memorypar=5 for a 256 (or more) Mb machine
c
      parameter (
c    +           memorypar=2,
     +           memorypar=5,
     +           numpar=6,
     +           numelem=109,
     +           numl=60,
     +           numlines=5000,
     +           numenin=125,
     +           numZ=2+2*memorypar,
     +           numN=2+5*memorypar,
     +           numbar=3,
     +           numgam=6,
     +           numlev=25,
     +           numfile=100,
     +           numlev2=200,
     +           numrotcc=4,
     +           numomp=1000,
     +           numrot=400,
     +           numen=360,
     +           numang=90,
     +           numangcont=36,
     +           numexc=12,
     +           numJph=30,
     +           numparx=numexc/2,
     +           numfact=6*numl,
     +           numbins=20*memorypar,
     +           numex=numlev+numbins,
     +           numJ=numJph,
     +           numenrec=5*memorypar,
     +           numangrec=18,
     +           numendisc=400,
     +           numen2=numen+numendisc,
     +           numenmsd=18,
     +           numJmsd=8,
     +           nummsd=6,
     +           numZph=4,
     +           numNph=8,
     +           numbinfis=1000,
     +           numhill=20,
     +           numtrans=numl*12*(numex+1)+numhill+1,
     +           nummold=32,
     +           numgoe=50,
     +           numcomp=100,
     +           numchannel=3+memorypar,
     +           numin=numchannel,
     +           numip=4,
     +           numid=2,
     +           numit=2,
     +           numih=2,
     +           numia=4,
     +           numchantot=50*memorypar,
     +           nummass=339,
     +           numA=numZ+numN,
     +           numenlow=20,
     +           numen6=500)
c
c *********************** block data constants0 ************************
c
      common /constants0c/ parname(-1:numpar),parsym(-1:numpar),
     +                     nuc(numelem),cparity(-1:1)
      common /constants0i/ parZ(0:numpar),parN(0:numpar),
     +                     parA(0:numpar),magic(8)
      common /constants0r/ parspin(0:numpar),pi,e2,hbar,clight
      common /constants0d/ parmass(0:numpar),excmass(0:numpar),amu
      character*1      parsym,cparity
      character*2      nuc
      character*8      parname
      integer          parZ,parN,parA,magic
      real             parspin,pi,e2,hbar,clight
      double precision parmass,excmass,amu
c
c ************************* subroutine machine *************************
c
      common /machinec/ path
      common /machinei/ lenpath
      character*60 path
      integer      lenpath
c
c *********************** subroutine constants *************************
c
      common /constantsi/ iso
      common /constantsr/ twopi,pi2,sqrttwopi,fourpi,deg2rad,rad2deg,
     +                    onethird,twothird,twopihbar,hbarc,pi2h2c2,
     +                    pi2h3c2,amupi2h3c2,amu4pi2h2c2,sgn(0:2*numl),
     +                    pardis
      integer      iso
      real         twopi,pi2,sqrttwopi,fourpi,deg2rad,rad2deg,onethird,
     +             twothird,twopihbar,hbarc,pi2h2c2,pi2h3c2,amupi2h3c2,
     +             amu4pi2h2c2,sgn,pardis
c
c ************************ subroutine readinput ************************
c
      common /readinputc/ inline(numlines)
      common /readinputi/ nlines
      character*80 inline
      integer      nlines
c
c ************************ subroutine input1 ***************************
c
      common /input1l/ flagnatural
      common /input1c/ energyfile,ptype0,Starget
      common /input1i/ Ztarget,k0,Atarget,Ntarget,Zinit,Ninit,Ainit,
     +                 nin,numinc
      common /input1r/ eninc(0:numenin+2),enincmin,enincmax
      logical      flagnatural
      character*1  ptype0
      character*2  Starget
      character*73 energyfile
      integer      Ztarget,k0,Atarget,Ntarget,Zinit,Ninit,Ainit,nin,
     +             numinc
      real         eninc,enincmin,enincmax
c
c ************************ subroutine input2 ***************************
c
      common /input2c/ outtype(0:numpar)
      common /input2i/ maxZ,maxN,nbins,segment,nlevmax,nlevmaxres,
     +                 Ltarget,core,gammax,transpower,nangle,nanglecont,
     +                 maxenrec,ldmodel,wmode,preeqmode,mpreeqmode,
     +                 nlev(0:numZ,0:numN),nlevbin(0:numpar)
      common /input2r/ isomer,xseps,popeps,Rfiseps,eninclow
      common /input2d/ transeps
      character*1      outtype
      integer          maxZ,maxN,nbins,segment,nlevmax,nlevmaxres,
     +                 Ltarget,core,gammax,transpower,nangle,
     +                 nanglecont,maxenrec,ldmodel,wmode,preeqmode,
     +                 mpreeqmode,nlev,nlevbin
      real             isomer,xseps,popeps,Rfiseps,eninclow
      double precision transeps
c
c ************************ subroutine input3 ***************************
c
      common /input3l/ flagecissave,flageciscalc,flaginccalc,flagrel,
     +                 flagcomp,flagfullhf,flagpespin,flaggiant0,
     +                 flagpecomp,flagsurface,flag2comp,flagchannels,
     +                 flagfission,flagcolldamp,flagclass2,flagbasic,
     +                 flageciscomp,flagecisdwba,flagonestep,
     +                 flaglocalomp,flagompall,flagautorot,
     +                 flagstate,flagsys(0:numpar),flagrot(0:numpar),
     +                 flagasys,flaggshell,flagmassdis,flagffevap,
     +                 flagendf,flagrecoil,flaglabddx,flagrecoilav,
     +                 flagEchannel
      common /input3c/ optmod(0:numZ,0:numN,numpar)
      common /input3i/ maxband,maxrot,strength
      common /input3r/ ewfc,epreeq,emulpre
      logical      flagecissave,flageciscalc,flaginccalc,flagrel,
     +             flagcomp,flagfullhf,flagpespin,flaggiant0,
     +             flagpecomp,flagsurface,flag2comp,flagchannels,
     +             flagfission,flagcolldamp,flagclass2,flagbasic,
     +             flageciscomp,flagecisdwba,flagonestep,flaglocalomp,
     +             flagompall,flagautorot,flagstate,flagsys,
     +             flagrot,flagasys,flaggshell,flagmassdis,flagffevap,
     +             flagendf,flagrecoil,flaglabddx,flagrecoilav,
     +             flagEchannel
      character*72 optmod
      integer      maxband,maxrot,strength
      real         ewfc,epreeq,emulpre
c
c ************************ subroutine input4 ***************************
c
      common /input4l/ flagmain,flagpop,flagcheck,flagoutomp,flagdirect,
     +                 flaginverse,flaggamma,flaglevels,flagdensity,
     +                 flagdisc,flagfisout,flagtransen,flagpeout,
     +                 flagang,flaglegendre,flagspec,flagddx,
     +                 flagoutdwba,flaggamdis,flagoutecis,flagexc,
     +                 flagadd,flagaddel,flagelectron,flagspher,
     +                 flagpartable
      common /input4i/ maxchannel,ddxmode,fismodel,fismodelalt
      logical flagmain,flagpop,flagcheck,flagoutomp,flagdirect,
     +        flaginverse,flaggamma,flaglevels,flagdensity,flagdisc,
     +        flagfisout,flagtransen,flagpeout,flagang,flaglegendre,
     +        flagspec,flagddx,flagoutdwba,flaggamdis,flagoutecis,
     +        flagexc,flagadd,flagaddel,flagelectron,flagspher,
     +        flagpartable
      integer maxchannel,ddxmode,fismodel,fismodelalt
c
c ************************ subroutine input5 ***************************
c
      common /input5c/ levelfile(0:numZ),deformfile(0:numZ),
     +                 hbtransfile(0:numZ,0:numN),
     +                 class2file(0:numZ,0:numN),optmodfileN(0:numZ),
     +                 optmodfileP(0:numZ)
      common /input5i/ Nlow(0:numZ,0:numN,0:numbar),
     +                 Ntop(0:numZ,0:numN,0:numbar),msdbins,nanglerec,
     +                 axtype(0:numZ,0:numN,numbar)
      common /input5r/ gnorm,Rspincut,alphald,betald,gammashell1,
     +                 gammashell2,Ufermi,cfermi,Ufermibf,cfermibf,Kph,
     +                 M2constant,M2limit,M2shift,Rpinu,Esurf0,Rgamma,
     +                 elwidth,alev(0:numZ,0:numN),
     +                 alimit(0:numZ,0:numN),gammald(0:numZ,0:numN),
     +                 pair(0:numZ,0:numN),
     +                 deltaW(0:numZ,0:numN,0:numbar),
     +                 Exmatch(0:numZ,0:numN,0:numbar),
     +                 T(0:numZ,0:numN,0:numbar),
     +                 E0(0:numZ,0:numN,0:numbar),
     +                 Krotconstant(0:numZ,0:numN,0:numbar),
     +                 beta2(0:numZ,0:numN,0:numbar),
     +                 c1table(0:numZ,0:numN),c2table(0:numZ,0:numN),
     +                 g(0:numZ,0:numN),gp(0:numZ,0:numN),
     +                 gn(0:numZ,0:numN),gamgam(0:numZ,0:numN),
     +                 D0(0:numZ,0:numN),S0(0:numZ,0:numN),
     +                 egr(0:numZ,0:numN,0:1,numgam,2),
     +                 ggr(0:numZ,0:numN,0:1,numgam,2),
     +                 sgr(0:numZ,0:numN,0:1,numgam,2),
     +                 fbarrier(0:numZ,0:numN,numbar),
     +                 fwidth(0:numZ,0:numN,numbar),
     +                 Rtransmom(0:numZ,0:numN,numbar),
     +                 Rclass2mom(0:numZ,0:numN,numbar),
     +                 widthc2(0:numZ,0:numN,numbar),Emsdmin
      character*72 levelfile,deformfile,hbtransfile,class2file,
     +             optmodfileN,optmodfileP
      integer      Nlow,Ntop,msdbins,nanglerec,axtype
      real         gnorm,Rspincut,alphald,betald,gammashell1,
     +             gammashell2,Ufermi,cfermi,Ufermibf,cfermibf,Kph,
     +             M2constant,M2limit,M2shift,Rpinu,Esurf0,Rgamma,
     +             elwidth,alev,alimit,gammald,pair,deltaW,Exmatch,T,E0,
     +             Krotconstant,beta2,c1table,c2table,g,gp,gn,gamgam,D0,
     +             S0,egr,ggr,sgr,fbarrier,fwidth,Rtransmom,Rclass2mom,
     +             widthc2,Emsdmin
c
c ************************ subroutine input6 ***************************
c
      common /input6l/ fileelastic,filespectrum(0:numpar),
     +                 fileangle(0:numlev),filediscrete(0:numlev),
     +                 filetotal,fileresidual,filechannels,filerecoil,
     +                 filefission,filegamdis
      common /input6i/ ddxecount(0:numpar),ddxacount(0:numpar) 
      common /input6r/ fileddxe(0:numpar,numfile),
     +                 fileddxa(0:numpar,numfile) 
      logical fileelastic,filespectrum,fileangle,filediscrete,filetotal,
     +        fileresidual,filechannels,filerecoil,filefission,
     +        filegamdis
      integer ddxecount,ddxacount
      real    fileddxe,fileddxa
c
c ************************ subroutine abundance ************************
c
      common /abundancei/ isotope(20),isonum
      common /abundancer/ abun(20)
      integer isotope,isonum
      real    abun
c
c *********************** subroutine particles *************************
c
      common /particlesl/ parinclude(-1:numpar),parskip(-1:numpar)
      logical parinclude,parskip
c
c ************************ subroutine nuclides *************************
c
      common /nuclidesl/ strucexist(0:numZ,0:numN),
     +                   strucwrite(0:numZ,0:numN),
     +                   invexist(0:numZ,0:numN),primary
      common /nuclidesi/ Zindex(0:numZ,0:numN,0:numpar),
     +                   Nindex(0:numZ,0:numN,0:numpar),
     +                   ZZ(0:numZ,0:numN,0:numpar),
     +                   NN(0:numZ,0:numN,0:numpar),
     +                   AA(0:numZ,0:numN,0:numpar),targetspin2,targetP
      common /nuclidesr/ targetspin,targetE,Q(0:numpar),
     +                   coulbar(0:numpar)
      common /nuclidesd/ tarmass
      logical          strucexist,strucwrite,invexist,primary
      integer          Zindex,Nindex,ZZ,NN,AA,targetspin2,targetP
      real             targetspin,targetE,Q,coulbar
      double precision tarmass
c
c ************************* subroutine masses **************************
c
      common /massesd/ nucmass(0:numZ+4,0:numN+4),
     +                 expmexc(0:numZ+4,0:numN+4),
     +                 thmexc(0:numZ+4,0:numN+4),
     +                 specmass(0:numZ,0:numN,0:numpar),
     +                 redumass(0:numZ,0:numN,0:numpar)
      double precision nucmass,expmexc,thmexc,specmass,redumass
c
c ************************ subroutine separation ***********************
c
      common /separationr/ S(0:numZ,0:numN,0:numpar)
      real S
c
c ************************* subroutine levels **************************
c
      common /levelsc/ jassign(0:numZ,0:numN,0:numlev2),
     +                 passign(0:numZ,0:numN,0:numlev2),
     +                 ENSDF(0:numZ,0:numN,0:numlev),
     +                 bassign(0:numZ,0:numN,0:numlev,0:numlev)
      common /levelsi/ nlevmax2(0:numZ,0:numN),
     +                 parlev(0:numZ,0:numN,0:numlev2),Liso
      common /levelsr/ edis(0:numZ,0:numN,0:numlev2),
     +                 jdis(0:numZ,0:numN,0:numlev2),
     +                 tau(0:numZ,0:numN,0:numlev),
     +                 branchratio(0:numZ,0:numN,0:numlev,0:numlev),
     +                 conv(0:numZ,0:numN,0:numlev,0:numlev)
      character*1  jassign,passign,bassign
      character*18 ENSDF
      integer      nlevmax2,parlev,Liso
      real         edis,jdis,tau,branchratio,conv
c
c ************************* subroutine deformpar ***********************
c
      common /deformparc/ colltype(0:numZ,0:numN),
     +                    deftype(0:numZ,0:numN),
     +                    leveltype(0:numZ,0:numN,0:numlev2)
      common /deformpari/ ndef(0:numZ,0:numN),nrot(0:numZ,0:numN),
     +                    indexlevel(0:numZ,0:numN,0:numlev2),
     +                    indexcc(0:numZ,0:numN,0:numlev2),
     +                    vibband(0:numZ,0:numN,0:numlev2),
     +                    lband(0:numZ,0:numN,0:numlev2),
     +                    Kband(0:numZ,0:numN,0:numlev2),
     +                    iphonon(0:numZ,0:numN,0:numlev2)
      common /deformparr/ rotpar(0:numZ,0:numN,0:numrotcc),
     +                    deform(0:numZ,0:numN,0:numlev2),
     +                    defpar(0:numZ,0:numN,0:numlev2),
     +                    Irigid0(0:numZ,0:numN),
     +                    Irigid(0:numZ,0:numN,0:numbar)
      character*1 colltype,deftype,leveltype
      integer     ndef,nrot,indexlevel,indexcc,vibband,lband,Kband,
     +            iphonon
      real        rotpar,deform,defpar,Irigid0,Irigid
c
c ************************* subroutine resonancepar ********************
c
      common /resonanceparr/ dD0(0:numZ,0:numN),dS0(0:numZ,0:numN),
     +                       dgamgam(0:numZ,0:numN)
      real dD0,dS0,dgamgam
c
c ************************ block data gamdata **************************
c
      common /gamdatar/ gamkopecky(250)
      real gamkopecky
c
c ************************* subroutine gammapar ************************
c
      common /gammapari/ ngr(0:numZ,0:numN,0:1,numgam)
      common /gammaparr/ kgr(0:numZ,0:numN,0:1,numgam)
      integer ngr
      real    kgr
c
c ************************* subroutine omppar **************************
c
      common /ompparl/ ompglobal(0:numZ,0:numN,numpar)
      common /omppari/ omplines(numpar)
      common /ompparr/ ef(0:numZ,0:numN,numpar),
     +                 rc0(0:numZ,0:numN,numpar),
     +                 rv0(0:numZ,0:numN,numpar),
     +                 av0(0:numZ,0:numN,numpar),
     +                 v1(0:numZ,0:numN,numpar),
     +                 v2(0:numZ,0:numN,numpar),
     +                 v3(0:numZ,0:numN,numpar),
     +                 w1(0:numZ,0:numN,numpar),
     +                 w2(0:numZ,0:numN,numpar),
     +                 rvd0(0:numZ,0:numN,numpar),
     +                 avd0(0:numZ,0:numN,numpar),
     +                 d1(0:numZ,0:numN,numpar),
     +                 d2(0:numZ,0:numN,numpar),
     +                 d3(0:numZ,0:numN,numpar),
     +                 rvso0(0:numZ,0:numN,numpar),
     +                 avso0(0:numZ,0:numN,numpar),
     +                 vso1(0:numZ,0:numN,numpar),
     +                 vso2(0:numZ,0:numN,numpar),
     +                 wso1(0:numZ,0:numN,numpar),
     +                 wso2(0:numZ,0:numN,numpar),
     +                 eomp(numpar,0:numomp),vomp(numpar,0:numomp,19)
      logical ompglobal
      integer omplines
      real    ef,rc0,rv0,av0,v1,v2,v3,w1,w2,rvd0,avd0,d1,d2,d3,
     +        rvso0,avso0,vso1,vso2,wso1,wso2,eomp,vomp
c
c ************************* subroutine fissionpar **********************
c
      common /fissionpari/ nfisbar(0:numZ,0:numN),
     +                     nclass2(0:numZ,0:numN),
     +                     nfistrhb(0:numZ,0:numN,numbar),
     +                     pfistrhb(0:numZ,0:numN,numbar,0:numlev),
     +                     nfisc2hb(0:numZ,0:numN,numbar),
     +                     pfisc2hb(0:numZ,0:numN,numbar,0:numlev)
      common /fissionparr/ minertia(0:numZ,0:numN,numbar),
     +                     fecont(0:numZ,0:numN,numbar),
     +                     efistrhb(0:numZ,0:numN,numbar,0:numlev),
     +                     jfistrhb(0:numZ,0:numN,numbar,0:numlev),
     +                     minertc2(0:numZ,0:numN,numbar),
     +                     efisc2hb(0:numZ,0:numN,numbar,0:numlev),
     +                     jfisc2hb(0:numZ,0:numN,numbar,0:numlev)
      integer nfisbar,nclass2,nfistrhb,pfistrhb,nfisc2hb,pfisc2hb
      real    minertia,fecont,efistrhb,jfistrhb,minertc2,efisc2hb,
     +        jfisc2hb
c
c ************************ block data fisdata **************************
c
      common /fisdatar/ barcof(7,7),l80cof(5,4),l20cof(5,4),lmxcof(6,4),
     +			egscof(5,6,4),x1b(6,11),x2b(6,11),x3b(10,20),
     +			x1h(6,11),x2h(6,11),x3h(10,20)
      real barcof,l80cof,l20cof,lmxcof,egscof,x1b,x2b,x3b,x1h,x2h,x3h
c
c ************************* subroutine rotband *************************
c
      common /rotbandi/ nfistrrot(0:numZ,0:numN,numbar),
     +                  pfistrrot(0:numZ,0:numN,numbar,0:numrot)
      common /rotbandr/ efistrrot(0:numZ,0:numN,numbar,0:numrot),
     +                  jfistrrot(0:numZ,0:numN,numbar,0:numrot)
      integer nfistrrot,pfistrrot
      real    efistrrot,jfistrrot
c
c ************************ subroutine rotclass2 ************************
c
      common /rotclass2i/ nfisc2rot(0:numZ,0:numN,numbar),
     +                    pfisc2rot(0:numZ,0:numN,numbar,0:numrot)
      common /rotclass2r/ Emaxclass2(0:numZ,0:numN,numbar),
     +                    efisc2rot(0:numZ,0:numN,numbar,0:numrot),
     +                    jfisc2rot(0:numZ,0:numN,numbar,0:numrot)
      integer nfisc2rot,pfisc2rot
      real    Emaxclass2,efisc2rot,jfisc2rot
c
c *********************** subroutine densitypar ************************
c
      common /densitypari/ Nlast(0:numZ,0:numN,0:numbar)
      integer Nlast
c
c *********************** subroutine densitymatch **********************
c
      common /densitymatchi/ NP,NLo
      common /densitymatchr/ EL,EP,scutoffdisc(0:numZ,0:numN,0:numbar),
     +                       logrho(4000),temprho(4000)
      integer NP,NLo
      real    EL,EP,scutoffdisc,logrho,temprho
c
c *********************** subroutine densitytable **********************
c
      common /densitytablel/ ldexist(0:numZ,0:numN,0:numbar)
      common /densitytabler/ edens(0:55)
      common /densitytabled/ ldtable(0:numZ,0:numN,0:55,0:29,0:numbar),
     +                       ldtottable(0:numZ,0:numN,0:55,0:numbar)
      logical          ldexist
      real             edens
      double precision ldtable,ldtottable
c
c *********************** subroutine D0theory **************************
c
      common /D0theoryr/ Dtheo(0:numZ,0:numN)
      real Dtheo
c
c *********************** subroutine weakcoupling **********************
c
      common /weakcouplingi/ pcore(0:numZ,0:numN,0:numlev2)
      common /weakcouplingr/ jcore(0:numZ,0:numN,0:numlev2)
      integer pcore
      real    jcore
c
c ************************* subroutine sumrules ************************
c
      common /sumrulesr/ Egrcoll(0:3,2),Ggrcoll(0:3,2),betagr(0:3,2)
      real Egrcoll,Ggrcoll,betagr
c
c ************************** subroutine kalbachsep *********************
c
      common /kalbachsepr/ Smyers(numpar)
      real Smyers
c
c ************************** subroutine grid ***************************
c
      common /gridc/ ecisstatus
      common /gridi/ maxen,ebegin(0:numpar),eendmax(0:numpar),numinclow
      common /gridr/ egrid(0:numen),deltaE(0:numen),Etop(0:numen),
     +               Ebottom(0:numen),Einc,E1v,translimit,
     +               angle(0:numang),cosangmin(0:numang),
     +               cosangmax(0:numang),sinangmin(0:numang),
     +               sinangmax(0:numang),dcosang(0:numang),
     +               anglecont(0:numangcont),angcontmin(0:numangcont),
     +               angcontmax(0:numangcont),
     +               cosangcontmin(0:2*numangcont+1),
     +               cosangcontmax(0:2*numangcont+1),
     +               sinangcontmin(0:2*numangcont+1),
     +               sinangcontmax(0:2*numangcont+1),
     +               dcosangcont(0:2*numangcont+1)
      character*7 ecisstatus
      integer     maxen,ebegin,eendmax,numinclow
      real        egrid,deltaE,Etop,Ebottom,Einc,E1v,translimit,angle,
     +            cosangmin,cosangmax,sinangmin,sinangmax,dcosang,
     +            anglecont,angcontmin,angcontmax,cosangcontmin,
     +            cosangcontmax,sinangcontmin,sinangcontmax,dcosangcont
c
c ************************** subroutine energies ***********************
c
      common /energiesl/ flagwidth,flagcompang,flagpreeq,flaggiant,
     +                   flagmulpre,mulpreZN(0:numZ,0:numN)
      common /energiesi/ eendhigh,eend(0:numpar),nendisc(0:numpar)
      common /energiesr/ eninccm,wavenum,Etotal,speceps,
     +                   eoutdis(0:numpar,0:numlev2)
      logical flagwidth,flagcompang,flagpreeq,flaggiant,flagmulpre,
     +        mulpreZN
      integer eendhigh,eend,nendisc
      real    eninccm,wavenum,Etotal,speceps,eoutdis
c
c ********************* subroutine inverse *****************************
c
      common /inversec/ transfile,csfile
      character*13 transfile,csfile
c
c ********************* subroutine inverseecis *************************
c
      common /inverseecisl/ legendre
      common /inverseecisc/ ecis1,ecis2,title,tarparity,Plevel(numlev2)
      common /inverseecisi/ Nband,ncoll,npp,iterm,idvib(numlev2),
     +                      iph(numlev2),Kmag(numlev2),iband(numlev2),
     +                      Jband(numlev2),Nrotbeta,iqm,iqmax,njmax
      common /inverseecisr/ rmatch,anginc,angend,angbeg,Elevel(numlev2),
     +                      tarspin,Jlevel(numlev2),vibbeta(numlev2),
     +                      rotbeta(numrot),spin,prodZ
      common /inverseecisd/ projmass,resmass
      logical          legendre
      character*1      tarparity,Plevel
      character*50     ecis1,ecis2
      character*72     title       
      integer          Nband,ncoll,npp,iterm,idvib,iph,Kmag,iband,Jband,
     +                 Nrotbeta,iqm,iqmax,njmax
      real             rmatch,anginc,angend,angbeg,Elevel,tarspin,
     +                 Jlevel,vibbeta,rotbeta,spin,prodZ
      double precision projmass,resmass
c
c *********************** subroutine opticaln **************************
c
      common /opticalnr/ v,rv,av,vd,rvd,avd,w,rw,aw,wd,rwd,awd,vso,rvso,
     +                   avso,wso,rwso,awso,rc
      real v,rv,av,vd,rvd,avd,w,rw,aw,wd,rwd,awd,vso,rvso,avso,wso,rwso,
     +     awso,rc
c
c *********************** subroutine inverseread ***********************
c
      common /inversereadi/ lmax(0:numpar,0:numen)
      common /inversereadr/ xstot(0:numpar,0:numen),
     +                      xsreac(0:numpar,0:numen),
     +                      xsopt(0:numpar,0:numen),
     +                      xselas(0:numpar,0:numen),
     +                      Tjl(0:numpar,0:numen,-1:1,0:numl),
     +                      Tl(0:numpar,0:numen,0:numl)
      integer lmax
      real    xstot,xsreac,xsopt,xselas,Tjl,Tl
c
c *********************** subroutine inversenorm ***********************
c
      common /inversenormr/ threshnorm(numpar)
      real threshnorm
c
c ************************* subroutine gammanorm ***********************
c
      common /gammanormr/ Dth,swaveth
      real Dth,swaveth
c
c ********************** subroutine preeqinit **************************
c
      common /preeqiniti/ maxexc,maxpar,maxJph
      common /preeqinitr/ Efermi,nfac(0:numexc),
     +                    ncomb(0:numexc,0:numexc),RnJsum(0:numexc),
     +                    RnJ(0:numexc,0:numJph),
     +                    Apauli(-1:numparx+1,-1:numparx+1),
     +     Apauli2(-1:numparx+1,-1:numparx+1,-1:numparx+1,-1:numparx+1),
     +                    Rblann(2,2,numparx)
      integer maxexc,maxpar,maxJph
      real    Efermi,nfac,ncomb,RnJsum,RnJ,Apauli,Apauli2,Rblann
c
c ********************** subroutine bonetti ****************************
c
      common /bonettir/ wvol(2,-200:10*numen)
      real    wvol
c
c ********************* subroutine excitoninit *************************
c
      common /excitoninitr/ wfac(0:numpar),Qfactor(0:numpar,0:numparx)
      real    wfac,Qfactor
c
c *********************** subroutine compoundinit **********************
c
      common /compoundiniti/ spin2(0:numpar),wpower,nmold,ngoep,ngoes,
     +                       ngoet
      common /compoundinitr/ xmold(nummold),wmold(nummold),
     +                       xgoep(numgoe),wgoep(numgoe),xgoes(numgoe),
     +                       wgoes(numgoe),xgoet(numgoe),wgoet(numgoe),
     +                       logfact(numfact)
      integer spin2,wpower,nmold,ngoep,ngoes,ngoet
      real    xmold,wmold,xgoep,wgoep,xgoes,wgoes,xgoet,wgoet,logfact
c
c ********************* subroutine incidentread ************************
c
      common /incidentreadc/ dorigin(0:numpar,0:numlev2)
      common /incidentreadi/ lmaxinc
      common /incidentreadr/ xstotinc,xsreacinc,xsoptinc,xselasinc,
     +                       Tjlinc(-1:1,0:numl),Tlinc(0:numl),
     +                       dleg(0:numpar,0:numlev2,0:3*numl),
     +                       directad(0:numpar,0:numlev2,0:numang),
     +                       ruth(0:numang),xscoupled,
     +                       xsdirdisc(0:numpar,0:numlev2),
     +                       xsdirdisctot(0:numpar),xsdirdiscsum
      character*6 dorigin
      integer     lmaxinc
      real        xstotinc,xsreacinc,xsoptinc,xselasinc,Tjlinc,Tlinc,
     +            dleg,directad,ruth,xscoupled,xsdirdisc,xsdirdisctot,
     +            xsdirdiscsum
c
c ************************** subroutine spr ****************************
c
      common /sprr/ swave,pwave,Rprime
      real swave,pwave,Rprime
c
c *********************** subroutine exgrid ****************************
c
      common /exgridi/ maxex(0:numZ,0:numN),nexmax(0:numpar),
     +                 maxJ(0:numZ,0:numN,0:numex)
      common /exgridr/ Exmax(0:numZ,0:numN),deltaEx(0:numZ,0:numN),
     +                 Qres(0:numZ,0:numN,0:numlev),
     +                 Ex(0:numZ,0:numN,0:numex)
      common /exgridd/ Ethresh(0:numZ,0:numN,0:numlev),
     +                 rhogrid(0:numZ,0:numN,0:numex,0:numJ,-1:1)
      integer          maxex,nexmax,maxJ
      real             Exmax,deltaEx,Qres,Ex
      double precision Ethresh,rhogrid
c
c ********************* subroutine recoilinit **************************
c
      common /recoiliniti/ iejlab(0:numpar),irecinit
      common /recoilinitr/ 
     +         ddxrec(0:numZ,0:numN,0:numex,0:numenrec,0:numangrec),
     +         ddxrectot(0:numZ,0:numN,0:numex),
     +         specrecoil(0:numZ,0:numN,0:numex),
     +         recoilint(0:numZ,0:numN),
     +         ddxejlab(0:numpar,0:numen2,0:numangcont),
     +         xsejlab(0:numpar,0:numen2),xsejlabint(0:numpar),
     +         angrecmin(0:numangrec),
     +         angrecmax(0:numangrec),cosrecmin(0:2*numangrec+1),
     +         cosrecmax(0:2*numangrec+1),dcosangrec(0:2*numangrec+1),
     +         Eejlab(0:numpar,0:numen2),
     +         Eejlabmin(0:numpar,0:numen2),
     +         Eejlabmax(0:numpar,0:numen2),
     +         dEejlab(0:numpar,0:numen2),
     +         areaejlab(0:numpar,0:numen2,0:2*numangcont+1),
     +         Erecinit,Erec(0:numZ,0:numN,0:numenrec),
     +         Erecmin(0:numZ,0:numN,0:numenrec),
     +         Erecmax(0:numZ,0:numN,0:numenrec),
     +         areareclab(0:numZ,0:numN,0:numenrec,0:2*numangrec+1),
     +         angcm
      integer iejlab,irecinit
      real    ddxrec,ddxrectot,specrecoil,recoilint,ddxejlab,xsejlab,
     +        xsejlabint,angrecmin,angrecmax,cosrecmin,
     +        cosrecmax,dcosangrec,Eejlab,Eejlabmin,Eejlabmax,dEejlab,
     +        areaejlab,Erecinit,Erec,Erecmin,Erecmax,areareclab,angcm
c
c ********************* subroutine directread **************************
c
      common /directreadr/ xsgrcoll(0:numpar,0:3,2),
     +                     grcollad(0:numpar,0:3,2,0:numangcont),
     +                     xscollconttot
      real xsgrcoll,grcollad,xscollconttot
c
c *************************** subroutine giant *************************
c
      common /giantr/ eoutgr(0:numpar,0:3,2),
     +                xsgrstate(0:numpar,0:3,2,0:numen),
     +                xsgr(0:numpar,0:numen),
     +                xsgrad(0:numpar,0:numen,0:numangcont),
     +                xsgrtot(0:numpar),xsgrsum,xscollcont(0:numen),
     +                collcontad(0:numen,0:numangcont)
      real eoutgr,xsgrstate,xsgr,xsgrad,xsgrtot,xsgrsum,xscollcont,
     +     collcontad
c
c ************************ subroutine preeq ****************************
c
      common /preeqi/ p0,h0,ppi0,hpi0,pnu0,hnu0
      common /preeqr/ Esurf,xsflux
      integer p0,h0,ppi0,hpi0,pnu0,hnu0
      real    Esurf,xsflux
c
c ************************ subroutine exciton **************************
c
      common /excitonr/ Ecomp,xsstep(0:numpar,0:numparx,0:numen),
     +                  xspreeq(0:numpar,0:numen),
     +                  xspreeqJP(0:numpar,0:numen,0:numJph,-1:1)
      real Ecomp,xsstep,xspreeq,xspreeqJP
c
c ********************* subroutine emissionrate ************************
c
      common /emissionrater/ 
     +                   wemistot(0:numparx,0:numparx),
     +                   wemispart(0:numpar,0:numparx,0:numparx),
     +                   wemission(0:numpar,0:numparx,0:numparx,0:numen)
      real wemistot,wemispart,wemission
c
c ************************ subroutine lifetime *************************
c
      common /lifetimer/ depletion(0:numparx,0:numparx),
     +                   tauexc(0:numparx,0:numparx)
      real depletion,tauexc
c
c ************************ subroutine matrix ***************************
c
      common /matrixr/ M2,M2pipi,M2nunu,M2pinu,M2nupi,Wompfac(0:2)
      real M2,M2pipi,M2nunu,M2pinu,M2nupi,Wompfac
c
c ************************ subroutine exciton2 *************************
c
      common /exciton2r/ xsstep2(0:numpar,0:numparx,0:numparx,0:numen)
      real xsstep2
c
c ************************ subroutine exchange2 ************************
c
      common /exchange2r/ 
     +                 tauexc2(0:numparx,0:numparx,0:numparx,0:numparx),
     +                 Lexc(0:numparx,0:numparx,0:numparx,0:numparx),
     +                 Gpiplus(0:numparx,0:numparx,0:numparx,0:numparx),
     +                 Gnuplus(0:numparx,0:numparx,0:numparx,0:numparx),
     +                 Gpinu(0:numparx,0:numparx,0:numparx,0:numparx),
     +                 Gnupi(0:numparx,0:numparx,0:numparx,0:numparx)
      real tauexc2,Lexc,Gpiplus,Gnuplus,Gpinu,Gnupi
c
c ********************* subroutine emissionrate2 ***********************
c
      common /emissionrate2r/ 
     +     wemistot2(0:numparx,0:numparx,0:numparx,0:numparx),
     +     wemispart2(0:numpar,0:numparx,0:numparx,0:numparx,0:numparx),
     +     wemission2(0:numpar,0:numparx,0:numparx,0:numparx,0:numparx,
     +     0:numen)
      real wemistot2,wemispart2,wemission2
c
c ************************ subroutine lifetime2 ************************
c
      common /lifetime2r/ PP2(0:numparx,0:numparx,0:numparx,0:numparx),
     +                    Spre(0:numparx,0:numparx,0:numparx,0:numparx)
      real PP2,Spre
c
c ************************ subroutine msdinit **************************
c
      common /msdiniti/ maxmsd,maxJmsd,msdbins2
      common /msdinitr/ dEmsd,Emsd(0:numenmsd)
      integer maxmsd,maxJmsd,msdbins2
      real    dEmsd,Emsd
c
c ************************ subroutine interangle ***********************
c
      common /interanglei/ 
     +                 nangleint(0:numangcont,0:numangcont,0:numangcont)
      integer nangleint
c
c ************************ subroutine dwbaecis *************************
c
      common /dwbaecisr/ betamsd,Emsdin,Emsdout,Exmsd
      real betamsd,Emsdin,Emsdout,Exmsd
c
c ************************ subroutine dwbaread *************************
c
      common /dwbareadr/ xsdwin(0:numenmsd,0:numenmsd,0:numJmsd,0:2),
     +            xsdw(0:numenmsd,0:numenmsd,0:numJmsd,0:numangcont,0:2)
      real xsdwin,xsdw
c
c ********************** subroutine onecontinuumA **********************
c
      common /onecontinuumAr/ 
     +                 xscont1(0:numpar,0:numpar,0:numenmsd,0:numenmsd),
     +   xscontad1(0:numpar,0:numpar,0:numenmsd,0:numenmsd,0:numangcont)
      real xscont1,xscontad1
c
c ************************ subroutine onestepA *************************
c
      common /onestepAr/ msdstep1(0:numpar,0:numen),
     +                   msdstepad1(0:numpar,0:numen,0:numangcont)
      real msdstep1,msdstepad1
c
c ************************ subroutine onestepB *************************
c
      common /onestepBr/ msdstep(0:numpar,nummsd,0:numen),
     +                   msdstepad(0:numpar,nummsd,0:numen,0:numangcont)
      real msdstep,msdstepad
c
c ********************** subroutine onecontinuumB **********************
c
      common /onecontinuumBr/ 
     +                  xscont(0:numpar,0:numpar,0:numenmsd,0:numenmsd),
     +   xscontad(0:numpar,0:numpar,0:numenmsd,0:numenmsd,0:numangcont),
     +                             msdstep0(0:numpar,nummsd,0:numenmsd),
     +               msdstepad0(0:numpar,nummsd,0:numenmsd,0:numangcont)
      real xscont,xscontad,msdstep0,msdstepad0
c
c ************************* subroutine msdtotal ************************
c
      common /msdtotalr/ msdall,msdsum(0:numpar),
     +                   msdtot(0:numpar,0:numen),
     +                   msdstepint(0:numpar,nummsd),
     +                   msdtotintad(0:numpar,0:numangcont),
     +                   msdtotad(0:numpar,0:numen,0:numangcont),
     +                   msdstepintad(0:numpar,nummsd,0:numangcont)
      real msdall,msdsum,msdtot,msdstepint,msdtotintad,msdtotad,
     +     msdstepintad
c
c ************************* subroutine msdplusmsc **********************
c
      common /msdplusmscr/ xspreeqad(0:numpar,0:numen2,0:numangcont)
      real xspreeqad
c
c ************************ subroutine preeqcomplex *********************
c
      common /preeqcomplexr/ xspreeqps(0:numpar,0:numen),
     +                       xspreeqki(0:numpar,0:numen)
      real xspreeqps,xspreeqki
c
c ************************ subroutine preeqcorrect *********************
c
      common /preeqcorrectr/ xspreeqdisc(0:numpar,0:numlev2),
     +                       xspreeqdisctot(0:numpar),xspreeqdiscsum
      real xspreeqdisc,xspreeqdisctot,xspreeqdiscsum
c
c ************************ subroutine preeqtotal ***********************
c
      common /preeqtotalr/ xssteptot(0:numpar,0:numparx),
     +                     xspreeqtot(0:numpar),xspreeqtotps(0:numpar),
     +                     xspreeqtotki(0:numpar),xspreeqsum,preeqnorm
      real xssteptot,xspreeqtot,xspreeqtotps,xspreeqtotki,xspreeqsum,
     +     preeqnorm
c
c *********************** subroutine population ************************
c
      common /populationr/ preeqpopex(0:numpar,0:numex),
     + preeqpop(0:numpar,0:numex,0:numJ,-1:1),
     + xspopph(0:numZph,0:numNph,0:numex,0:numparx,0:numparx),
     + xspopph2(0:numZph,0:numNph,0:numex,0:numparx,0:numparx,0:numparx,
     +   0:numparx)
      real preeqpopex,preeqpop,xspopph,xspopph2
c
c *********************** subroutine compnorm **************************
c
      common /compnormi/ J2beg,J2end,pardif
      common /compnormr/ CNfactor
      integer J2beg,J2end,pardif
      real    CNfactor
c
c *********************** subroutine comptarget ************************
c
      common /comptargeti/ tnumi,tnumo
      common /comptargetr/ Exinc,Wab,dExinc,xsbinary(-1:numpar),
     +                     cleg(0:numpar,0:numlev,0:3*numl),
     +                     xscompcont(0:numpar),
     +                     contrib(0:numpar,0:numex)
      common /comptargetd/ xspop(0:numZ,0:numN,0:numex,0:numJ,-1:1),
     +                     xspopex(0:numZ,0:numN,0:numex),
     +                     xspopnuc(0:numZ,0:numN)
      integer          tnumi,tnumo
      real             Exinc,Wab,dExinc,xsbinary,cleg,xscompcont,contrib
      double precision xspop,xspopex,xspopnuc
c
c ************************ subroutine densprepare **********************
c
      common /denspreparei/ lmaxhf(0:numpar,0:numex),nbintfis(numbar)
      common /denspreparer/ Tgam(0:numex,0:numgam,0:1),
     +                      Tjlnex(0:numpar,0:numex,-1:1,0:numl),
     +                      Tlnex(0:numpar,0:numex,0:numl),   
     +                      eintfis(numbinfis,numbar)
      common /densprepared/ rho0(0:numpar,0:numex,0:numJ,-1:1),
     +                      rhofis(numbinfis,0:numJ,-1:1,numbar)
      integer          lmaxhf,nbintfis
      real             Tgam,Tjlnex,Tlnex,eintfis
      double precision rho0,rhofis
c
c ************************* subroutine tfission ************************
c
      common /tfissiond/ tfisdown(0:numJ,-1:1),tfis(0:numJ,-1:1),
     +                   tfisA(0:numJ,-1:1,0:numhill),
     +                   rhofisA(0:numJ,-1:1,0:numhill),
     +                   tfisup(0:numJ,-1:1)
      double precision tfisdown,tfis,tfisA,rhofisA,tfisup
c
c *********************** subroutine compprepare ***********************
c
      common /comppreparei/ tnum,tnuminc
      common /compprepared/ denomhf,feed,transjl(0:5,numtrans),
     +                      enumhf(0:numpar,0:numex,0:numJ,-1:1)
      integer          tnum,tnuminc
      double precision denomhf,feed,transjl,enumhf
c
c *********************** subroutine widthprepare **********************
c
      common /widthpreparer/ freedom(numtrans),prodwidth(nummold),
     +                       sumhrtw,vhrtw(numtrans),whrtw(numtrans),
     +                       agoe1(numgoe,numgoe,numgoe),
     +                       agoe2(numgoe,numgoe,numgoe),
     +                       agoe3(numgoe,numgoe,numgoe),
     +                       agoe4(numgoe,numgoe,numgoe),
     +                       agoe5(numgoe,numgoe,numgoe),
     +                       agoe6(numgoe,numgoe,numgoe),
     +                       agoe7(numgoe,numgoe,numgoe),
     +                       agoe8(numgoe,numgoe,numgoe),sgoe1,sgoe2,
     +                       sgoe3,sgoe4,sgoe5
      common /widthprepared/ tjlav(numtrans)
      real             freedom,prodwidth,sumhrtw,vhrtw,whrtw,agoe1,
     +                 agoe2,agoe3,agoe4,agoe5,agoe6,agoe7,agoe8,sgoe1,
     +                 sgoe2,sgoe3,sgoe4,sgoe5
      double precision tjlav
c
c *********************** subroutine raynalcomp ************************
c
      common /raynalcompc/ pcomp(numcomp)
      common /raynalcompi/ typecomp(0:numcomp),nsp1,nsp2,ncont
      common /raynalcompr/ bz1,elevelcomp(0:numcomp),jcomp(numcomp),
     +                     spincomp(numcomp),prodZcomp(numcomp),
     +                     aldcomp(0:numpar),Umcomp(0:numpar),
     +                     tempcomp(0:numpar),E0comp(0:numpar),tgo,
     +                     Excomp(0:numpar)
      common /raynalcompd/ ejeccomp(numcomp),masscomp(numcomp)
      character*1      pcomp
      integer          typecomp,nsp1,nsp2,ncont
      real             bz1,elevelcomp,jcomp,spincomp,prodZcomp,aldcomp,
     +                 Umcomp,tempcomp,E0comp,tgo,Excomp
      double precision ejeccomp,masscomp
c
c ************************** subroutine binary *************************
c
      common /binaryr/ xspopex0(0:numpar,0:numlev),
     +                 xscompdisctot(0:numpar),
     +                 xsdisc(0:numpar,0:numlev),
     +                 xscompdisc(0:numpar,0:numlev),
     +                 xsdisctot(0:numpar),xsdircont(0:numpar),
     +                 xsdirect(0:numpar),xsconttot(0:numpar),
     +                 xscompound(0:numpar),xscompel,xselastot,xsnonel,
     +                 xscompnonel,feedbinary(0:numpar,0:numex),
     +                 binemissum(0:numpar)
      real xspopex0,xscompdisctot,xsdisc,xscompdisc,xsdisctot,xsdircont,
     +     xsdirect,xsconttot,xscompound,xscompel,xselastot,xsnonel,
     +     xscompnonel,feedbinary,binemissum
c
c ************************** subroutine binaryspectra ******************
c
      common /binaryspectrar/ xscomp(0:numpar,0:numen),
     +                        xsbinemis(0:numpar,0:numen),
     +                        xscompad(0:numpar,0:numen,0:numangcont),
     +                        xsbinemisad(0:numpar,0:numen,0:numangcont)
      real xscomp,xsbinemis,xscompad,xsbinemisad
c
c *********************** subroutine binemission ***********************
c
      common /binemissionr/ xsemis(0:numpar,0:numen),binnorm(0:numpar),
     +                      binemis(0:numpar,0:numex,0:numen)
      real xsemis,binnorm,binemis
c
c *********************** subroutine angdis ****************************
c
      common /angdisr/ compad(0:numpar,0:numlev,0:numang),
     +                 discad(0:numpar,0:numlev,0:numang),
     +                 tleg(0:numpar,0:numlev,0:3*numl),
     +                 tlegnor(0:numpar,0:numlev,0:3*numl)
      real compad,discad,tleg,tlegnor
c
c ********************** subroutine multiple ***************************
c
      common /multipler/ xsmpeemis(0:numpar,0:numen),
     +                   xspartial(0:numpar,0:numex+1),
     +                   xsmpe(0:numpar,0:numex+1),
     +                   mcontrib(0:numpar,0:numex+1,0:numex+1),
     +                   mpecontrib(0:numpar,0:numex+1,0:numex+1),
     +                   xsmpetot(0:numpar),
     +                   popexcl(0:numZ,0:numN,0:numex+1),
     +                   Dmulti(0:numex),
     +                   feedexcl(0:2*numchannel,0:2*numchannel,
     +                     0:numpar,0:numex+1,0:numex+1),
     +                   xsmpreeq(0:numpar,0:numen),
     +                   xsmpreeqad(0:numpar,0:numen,0:numangcont),
     +                   fisfeedex(0:numZ,0:numN,0:numex+1),
     +                   xsfeed(0:numZ-2,0:numN-2,-1:numpar),
     +                   xsngn(-1:numpar),xsngnsum
      real xsmpeemis,xspartial,xsmpe,mcontrib,mpecontrib,xsmpetot,
     +     Dmulti,popexcl,feedexcl,xsmpreeq,xsmpreeqad,fisfeedex,
     +     xsfeed,xsngn,xsngnsum
c
c ********************** subroutine cascade ****************************
c
      common /cascader/ xsgamdis(0:numZ,0:numN,0:numlev,0:numlev)
      real xsgamdis
c
c ********************** subroutine compemission ***********************
c
      common /compemissionr/ compspect(numen),preeqspect(numen)
      real compspect,preeqspect
c
c ************************ subroutine cm2lab ***************************
c
      common /cm2labr/ Eejlab11,Eejlab12,Eejlab21,Eejlab22,
     +                 cosejlab11,cosejlab12,cosejlab21,cosejlab22,
     +                 sinejlab11,sinejlab12,sinejlab21,sinejlab22,
     +                 Eejcm1,Eejcm2,vcm,vejcm1,vejcm2,
     +                 cosejcm1,cosejcm2,sinejcm1,sinejcm2,
     +                 Ereclab11,Ereclab12,Ereclab21,Ereclab22,
     +                 cosreclab11,cosreclab12,cosreclab21,cosreclab22,
     +                 sinreclab11,sinreclab12,sinreclab21,sinreclab22,
     +                 vreccm1,vreccm2,ejectmass,recoilmass
      real  Eejlab11,Eejlab12,Eejlab21,Eejlab22,
     +      cosejlab11,cosejlab12,cosejlab21,cosejlab22,
     +      sinejlab11,sinejlab12,sinejlab21,sinejlab22,
     +      Eejcm1,Eejcm2,vcm,vejcm1,vejcm2,
     +      cosejcm1,cosejcm2,sinejcm1,sinejcm2,
     +      Ereclab11,Ereclab12,Ereclab21,Ereclab22,
     +      cosreclab11,cosreclab12,cosreclab21,cosreclab22,
     +      sinreclab11,sinreclab12,sinreclab21,sinreclab22,
     +      vreccm1,vreccm2,ejectmass,recoilmass
c
c ********************** subroutine channels ***************************
c
      common /channelsl/ chanopen(0:numin,0:numip,0:numid,0:numit,
     +                   0:numih,0:numia),idnumfull
      common /channelsc/ reacstring(0:numchantot)
      common /channelsi/ idnum,maxchannel2,idchannel(0:numchantot),
     +                   opennum
      common /channelsr/ xsparcheck(0:numpar),
     +                   xsspeccheck(0:numpar,0:numen),channelsum,
     +                   xsexcl(0:numchantot,0:numex+1),
     +                   gamexcl(0:numchantot,0:numex+1),
     +                   xschannel(0:numchantot),
     +                   xsgamchannel(0:numchantot),
     +                   xsfischannel(0:numchantot),
     +                   xschancheck(0:numchantot),
     +                   xsfischancheck(0:numchantot),
     +                   xsratio(0:numchantot),
     +                   Qexcl(0:numchantot,0:numlev),
     +                   xschaniso(0:numchantot,0:numlev),
     +                   exclyield(0:numchantot,0:numlev),
     +                   xsgamdischan(0:numchantot,0:numlev,0:numlev),
     +                   Eavchannel(0:numchantot,0:numpar),
     +                   xschannelsp(0:numchantot,0:numpar,0:numen),
     +                   xsfischannelsp(0:numchantot,0:numpar,0:numen),
     +                   specemis(0:numen)
      common /channelsd/ Ethrexcl(0:numchantot,0:numlev)
      logical          chanopen,idnumfull
      character*18     reacstring
      integer          idnum,maxchannel2,idchannel,opennum
      real             xsparcheck,xsspeccheck,channelsum,xsexcl,gamexcl,
     +                 xschannel,xsgamchannel,xsfischannel,xschancheck,
     +                 xsfischancheck,xsratio,Qexcl,xschaniso,exclyield,
     +                 xsgamdischan,Eavchannel,xschannelsp,
     +                 xsfischannelsp,specemis
      double precision Ethrexcl
c
c ************************ subroutine totalxs **************************
c
      common /totalxsr/ xsexclusive(0:numpar),xsexclcont(0:numpar),
     +                  xsparticle(0:numpar),multiplicity(0:numpar),
     +                  xsfistot
      real xsexclusive,xsexclcont,xsparticle,multiplicity,xsfistot
c
c *************************** subroutine spectra ***********************
c
      common /spectrai/ eendout(0:numpar)
      common /spectrar/ espec(0:numpar,0:numen2),
     +                  xsdiscout(0:numpar,0:numen2),
     +                  xspreeqout(0:numpar,0:numen2),
     +                  xsmpreeqout(0:numpar,0:numen2),
     +                  xscompout(0:numpar,0:numen2),
     +                  xsdiscoutad(0:numpar,0:numen2,0:numangcont),
     +                  xspreeqoutad(0:numpar,0:numen2,0:numangcont),
     +                  xsmpreeqoutad(0:numpar,0:numen2,0:numangcont),
     +                  xscompoutad(0:numpar,0:numen2,0:numangcont),
     +                  xssumout(0:numpar,0:numen2),
     +                  preeqratio(0:numpar,0:numen2),
     +                  xssumoutad(0:numpar,0:numen2,0:numangcont)
      integer eendout
      real    espec,xsdiscout,xspreeqout,xsmpreeqout,xscompout,
     +        xsdiscoutad,xspreeqoutad,xsmpreeqoutad,xscompoutad,
     +        xssumout,preeqratio,xssumoutad
c
c ************************ subroutine massdis **************************
c
      common /massdisr/ excfis,disa,disacor,disaz,disazcor
      real excfis,disa(nummass),disacor(nummass),disaz(nummass,numelem),
     +     disazcor(nummass,numelem)
c
c ************************ subroutine brosafy **************************
c
      common /brosafyr/ bfsplin(9),hwsplin(9),bf(9),hw(9)
      common /brosafyi/ numtemp
      integer numtemp
      real    bfsplin,hwsplin,bf,hw
c
c ************************ subroutine neck******************************
c
      common /neckr/ cur,c0,totl,di,rest,r1,r2,r3,z1,z2,z3,vtot,rt,rp,
     +               rpt,amm,zee,ess,aaa
      real cur,c0,totl,di,rest,r1,r2,r3,z1,z2,z3,vtot,rt,rp,rpt,amm,zee,
     +     ess,aaa
c
c ************************ subroutine residual *************************
c
      common /residuali/ maxA
      common /residualr/ xsresprod,xsmassprod(0:numA),
     +                   xsbranch(0:numZ,0:numN,0:numlev)
      integer maxA
      real    xsresprod,xsmassprod,xsbranch
c
c ************************ subroutine thermal **************************
c
      common /thermalr/ fxschannel(numenlow,0:numchantot),
     +                  fxsgamchannel(numenlow,0:numchantot),
     +           fxsgamdischan(numenlow,0:numchantot,0:numlev,0:numlev),
     +                  fxsratio(numenlow,0:numchantot),
     +                  fxschaniso(numenlow,0:numchantot,0:numlev),
     +                  fexclyield(numenlow,0:numchantot,0:numlev),
     +                  fxsbinary(numenlow,0:numpar),
     +                  fxspopnuc(numenlow,0:numZ,0:numN),
     +                  fxspopex(numenlow,0:numZ,0:numN,0:numlev),
     +                  fxsbranch(numenlow,0:numZ,0:numN,0:numlev),
     +                  fxsexclusive(numenlow,0:numpar),
     +                  fxsdisctot(numenlow,0:numpar),
     +                  fxsexclcont(numenlow,0:numpar),
     +                  fxsngn(numenlow,-1:numpar),
     +                  fxsdisc(numenlow,0:numpar,0:numlev),
     +                  fxsdirdisc(numenlow,0:numpar,0:numlev),
     +                  fxscompdisc(numenlow,0:numpar,0:numlev)
      real fxschannel,fxsgamchannel,fxsgamdischan,fxsratio,fxschaniso,
     +     fexclyield,fxsbinary,fxspopnuc,fxspopex,fxsbranch,
     +     fxsexclusive,fxsdisctot,fxsexclcont,fxsngn,fxsdisc,
     +     fxsdirdisc,fxscompdisc
c
c ************************ subroutine residualout **********************
c
      common /residualoutl/ rpexist(0:numZ,0:numN),
     +                      rpisoexist(0:numZ,0:numN,0:numlev)
      logical rpexist,rpisoexist
c
c ************************ subroutine fissionout ***********************
c
      common /fissionoutl/ fisexist(0:numZ,0:numN)
      logical fisexist
c
c ************************ subroutine channelsout **********************
c
      common /channelsoutl/ 
     +       chanexist(0:numin,0:numip,0:numid,0:numit,0:numih,0:numia),
     +    gamchanexist(0:numin,0:numip,0:numid,0:numit,0:numih,0:numia),
     +    chanisoexist(0:numin,0:numip,0:numid,0:numit,0:numih,0:numia,
     +      0:numlev),
     +     chanfisexist(0:numin,0:numip,0:numid,0:numit,0:numih,0:numia)
      logical chanexist,gamchanexist,chanisoexist,chanfisexist
c
c ************************ subroutine gamdisout ************************
c
      common /gamdisoutl/ gamexist(0:numZ,0:numN,0:numlev,0:numlev)
      logical gamexist
c
c *********************** subroutine endfenergies **********************
c
      common /endfenergiesi/ nen6
      common /endfenergiesd/ e6(numen6)
      integer          nen6
      double precision e6
c
c *********************** subroutine endfread **************************
c
      common /endfreadr/ xstot6(numen6),xsreac6(numen6),xsopt6(numen6),
     +                   xselas6(numen6)
      real xstot6,xsreac6,xsopt6,xselas6
Copyright (C) 2004  A.J. Koning, S. Hilaire and M.C. Duijvestijn
